#!/usr/bin/env python

import syndicate.util.crypto as crypto

from Crypto.Hash import SHA256 as HashAlg
from Crypto.PublicKey import RSA as CryptoKey
from Crypto import Random
from Crypto.Signature import PKCS1_PSS as CryptoSigner
from Crypto.Protocol.KDF import PBKDF2

def hash_data( data ):
   """
   Given a string of data, calculate 
   the SHA256 over it
   """
   h = HashAlg.new()
   h.update( data )
   return h.digest()

def generate_key_pair( key_size ):
   """
   Make a key pair
   """
   rng = Random.new().read
   key = CryptoKey.generate(key_size, rng)

   private_key_pem = key.exportKey()
   public_key_pem = key.publickey().exportKey()

   return (public_key_pem, private_key_pem)

